// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleRentalProj1.Models;

#nullable disable

namespace VehicleRentalProj1.Migrations
{
    [DbContext(typeof(VehiclesRent1Context))]
    [Migration("20231204140450_person")]
    partial class person
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VehicleRentalProj1.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LocationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("LocationId")
                        .HasName("PK__Location__E7FEA477ED3584DB");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("VehicleRentalProj1.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PersonID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId")
                        .HasName("PK__Persons__AA2FFB85EFEE0799");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("VehicleRentalProj1.Models.Rental", b =>
                {
                    b.Property<int>("RentallD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentallD"));

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("PersonID");

                    b.Property<DateTime>("RentalEndDate")
                        .HasColumnType("date");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int")
                        .HasColumnName("VehicleID");

                    b.HasKey("RentallD")
                        .HasName("PK__Rentals__977F6CC8E921AAF4");

                    b.HasIndex("PersonId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("VehicleRentalProj1.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VehicleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("LocationID");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("VehicleId")
                        .HasName("PK__Vehicles__476B54B2BED4CCC4");

                    b.HasIndex("LocationId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("VehicleRentalProj1.Models.Rental", b =>
                {
                    b.HasOne("VehicleRentalProj1.Models.Person", "Person")
                        .WithMany("Rentals")
                        .HasForeignKey("PersonId")
                        .IsRequired()
                        .HasConstraintName("FK_Rentals_Persons");

                    b.HasOne("VehicleRentalProj1.Models.Vehicle", "Vehicle")
                        .WithMany("Rentals")
                        .HasForeignKey("VehicleId")
                        .IsRequired()
                        .HasConstraintName("FK_Rentals_Vehicles");

                    b.Navigation("Person");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("VehicleRentalProj1.Models.Vehicle", b =>
                {
                    b.HasOne("VehicleRentalProj1.Models.Location", "Location")
                        .WithMany("Vehicles")
                        .HasForeignKey("LocationId")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicles_Locations");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("VehicleRentalProj1.Models.Location", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("VehicleRentalProj1.Models.Person", b =>
                {
                    b.Navigation("Rentals");
                });

            modelBuilder.Entity("VehicleRentalProj1.Models.Vehicle", b =>
                {
                    b.Navigation("Rentals");
                });
#pragma warning restore 612, 618
        }
    }
}
